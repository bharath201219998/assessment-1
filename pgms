// swapping using call be value and call by refernce

#include<stdio.h>
int main()
{
    int a=10,b=20,temp;
    
    
    printf("before swaping %d,%d",a,b);
    
    swap(a,b);
    swap1(&a,&b);
    
    printf("swapped %d,%d",a,b);

    
    return 0;
}


void swap(int a,int b)
{int temp;
    temp=a;
    a=b;
    b=temp;
    printf("\nswapped using call by value a=%d,b=%d\n",a,b);
}

void swap1(int *a,int *b)

{
    int temp;
    temp=*a;
    *a=*b;
    *b=temp;
    printf("swapped using call by reference a=%d,b=%d\n",*a,*b);
    
    
}




---------------------------------------------------------------------------------



// finding  biggest elements in an array

#include<stdio.h>
int main()
{
    
    int a[10];
    int i;
    int big=0;
    int no=0;
    
    printf("enter the numbers to find largest of the array");
    
    for(i=0;i<10;i++)
    {
        scanf("%d",&a[i]);
        
        if (a[i]>big)
          big=a[i];
    }
    
    
    printf("biggest element is %d",big);
    
    return 0;
}

----------------------------------------------------------------------------------------


#include <stdio.h>
int *q;

int main()
{
    int *p;
    
    
    p=(int*) malloc(sizeof(int));
    
    *p=10;
    
    printf("%d\n",(*p));
    int *q;
    
    q=(int*) malloc(sizeof(int));
    
    *q=20;
    
    printf("%d\n",(*q));
}


----------------------------------------------------------------------------------
//found r not


#include<stdio.h>
#include<stdlib.h>
int main()
{
    
    int a[10]; 
    int flag =0;
    int *p;
    int i;
    int num;
    int len=0;
    int found;
    
    p = (int *) malloc(sizeof(int)*10);
    
    printf("enter number of elements:");
    
    for (i=0;i<10;i++)
    {
        scanf("%d",&(*(p+i)));
        len++;
    }
    printf("\nlength of array :%d",len);
    
    
    printf("\n enter the number to search");
    
    scanf("%d",&num);
    
    for (i=0;i<10;i++)
    {
        if (num==(*(p+i)))
        {
            flag=1;
         
        }
    }
    if(flag==1)
    {
         printf("\nfound");
        
    }
    else

     printf("\n not found");
       
    
    return 0;
    
    
    
}

-------------------------------------------------------------------------------------


/// structures



    

    
#include <stdio.h>
#include <string.h>


struct emp
{
  char student[10];
  char phone[10];
  char book[10];
};


int
main ()
{
  struct emp employee[3];
  struct emp *emp1;
  
  char sid[10];
  int flag = 0;
  int index;
  char nullStr[20] = {"\0"};
  char newid[10];
  char newname[10];
  char newbook[10];


  printf ("Enter the 3 employee details:\n");
  for (int i = 0; i < 3; i++)
    {
      scanf("%s",employee[i].student);
      scanf("%s",employee[i].phone);
       scanf("%s",employee[i].book);
      
    }


  for (int i = 0; i < 3; i++)
    {
      printf ("Employee id = %s\t", employee[i].student);
      printf ("Employee name = %s\n", employee[i].phone);
       printf ("Employee name = %s\n", employee[i].book);
    }

  printf ("Enter the employee id you want to delete\n");
  scanf("%s",sid);
  printf ("%s\n", sid);


 printf ("please find the updated details:\n");
  for (int i = 0; i < 3; i++)
    {
      if (strcmp(sid,employee[i].student) == 0)
{
 flag = 1;
 index = i;
 strcpy(employee[i].student,nullStr);
 strcpy(employee[i].phone,nullStr);
 strcpy(employee[i].book,nullStr);
}
else
{
 printf ("Employee name = %s\t", employee[i].student);
      printf ("Employee phone = %s\n", employee[i].phone);
      printf ("Employee book = %s\n",employee[i].book);
}
    }
   
   


  if (flag == 1)
  {
       printf ("\nemployee record deleted\n");
  }
  else
  {
      printf ("\nemployee record not deleted\n");
  }
 
 flag=0;
 
 printf ("Enter the employee id you want to update\n");
  scanf("%s",sid);
  printf ("%s\n", sid);


 printf ("please find the updated details:\n");
  for (int i = 0; i < 3; i++)
    {
      if (strcmp(sid,employee[i].student) == 0)
{
 flag = 1;
 index = i;
 printf("enter the employee id:\t");
 scanf("%s",newid);
  printf("\n enter the employee name:\t");
 scanf("%s",newname);
 
 strcpy(employee[i].student,newid);
 strcpy(employee[i].phone,newname);
 strcpy(employee[i].book,newbook);
 
}


    }
  
  for(int i=0;i<3;i++)
  {
      printf ("Employee id = %s\t", employee[i].student);
      printf ("Employee name = %s\n", employee[i].phone);
      printf("Employee name = %s\n", employee[i].book);
      
  }
 
  return 0;
}




























